enum ApplicationIdType {
  CLIENT_ID
  ID
}

input ApplicationWhereInput {
  id_in: [String]
  # 分类
  enabled: Boolean
}

input RouteWhereInput {
  """
  是否启用
  """
  enabled: Boolean
}

input RouteCreateInput {
  """
  名称
  """
  name: String!
  """
  是否启用
  """
  enabled: Boolean
  """
  路径
  """
  path: String!
  """
  必须登录
  """
  authorized: Boolean
  """
  路由类型
  """
  type: RouteType
  """
  访问权限
  """
  access: String
  """
  在面包屑中隐藏菜单
  """
  hideInBreadcrumb: Boolean
  """
  重定向的路径
  """
  redirect: String
  """
  组件
  """
  component: ID
  """
  自定义面包屑组件
  """
  breadcrumb: ID
  """
  应用
  """
  application: ID!
  """
  对应的图标
  """
  icon: String
  """
  父路由
  """
  parentRoute: ID
  """
  排序
  """
  index: Int
  """
  布局设置
  """
  layout: LayoutSettingsInput
}

input RouteUpdateInput {
  """
  名称
  """
  name: String
  """
  是否启用
  """
  enabled: Boolean
  """
  路由类型
  """
  type: RouteType
  """
  路径
  """
  path: String
  """
  必须登录
  """
  authorized: Boolean
  """
  访问权限
  """
  access: String
  """
  在面包屑中隐藏菜单
  """
  hideInBreadcrumb: Boolean
  """
  重定向的路径
  """
  redirect: String
  """
  组件
  """
  component: ID
  """
  自定义面包屑组件
  """
  breadcrumb: ID
  """
  对应的图标
  """
  icon: String
  """
  父路由
  """
  parentRoute: ID
  """
  排序
  """
  index: Int
  """
  布局设置
  """
  layout: LayoutSettingsInput
}

input NuwaComponentInput {
  # 渲染组件
  template: String
}

input MenuCreateInput {
  """
  名称
  """
  name: String!
  """
  对应的图标
  """
  icon: String
  """
  菜单类型
  """
  type: MenuType!
  """
  路径
  """
  path: String
  """
  权限
  """
  authority: [String]
  """
  父菜单
  """
  parentMenu: ID
  """
  排序
  """
  index: Int
  """
  应用
  """
  application: ID!
  """
  组件
  """
  component: ID
}

input MenuUpdateInput {
  """
  名称
  """
  name: String
  """
  对应的图标
  """
  icon: String
  """
  菜单类型
  """
  type: MenuType
  """
  路径
  """
  path: String
  """
  父路由
  """
  parentMenu: ID
  """
  默认位置
  """
  index: Int
  """
  组件
  """
  component: ID
  """
  权限
  """
  authority: [String!]
  """
  隐藏菜单
  """
  hideInMenu: Boolean
  """
  隐藏子菜单
  """
  hideChildrenInMenu: Boolean
  """
  不在面包屑中显示菜单
  """
  hideInBreadcrumb: Boolean
}

type RouteComponentWrapper {
  # 渲染组件
  id: ID
  # 模版
  template: String
  # 组件配置数据
  #    props: JSON
}

input ApplicationCreateInput {
  # 名称
  name: String!
  # 简介
  description: String
}

input ApplicationUpdateInput {
  # 名称
  name: String
  # 简介
  description: String
  # 应用 LOGO
  logo: String
  # 组织
  organization: String
  # 应用根路径
  path: String
  # 是否启用
  enabled: Boolean
}

enum ClientSecretType {
  SESSION
  OAUTH
  PERSONAL_ACCESS_TOKEN
}

type ClientSecret {
  id: ID!
  """
  类型
  """
  type: ClientSecretType!
  """
  密钥
  """
  secret: String!
  """
  创建时间
  """
  createdAt: Date!
  """
  创建人
  """
  createdBy: ID
  """
  最后使用时间
  """
  lastUseTime: Date
}

type Menu {
  id: ID!
  # 菜单名称
  name: String
  # 路由类型
  type: MenuType!
  # 对应的图标
  icon: String
  # 树路径
  path: String
  # 不在菜单中显示子菜单
  hideChildrenInMenu: Boolean
  # 在面包屑中隐藏菜单
  hideInBreadcrumb: Boolean
  # 不在菜单中显示
  hideInMenu: Boolean
  # 徽章 / 印记
  badge: String
  # 需要提供的权限
  authority: [String]
  # 序号
  index: Int!
  # 子菜单
  children: [Menu!]!
  # 父菜单
  parent: Menu
  # 菜单层级
  level: Int!
  # 路由对应的应用
  application: Application!
  # 组件
  component: Component
}

enum LicenceType {
  # 试用
  TRIAL
  # 订阅
  SUBSCRIPTION
  # 终身
  LIFETIME
}

type Licence {
  id: ID
  # 许可证 Key
  key: String
  # 许可证类型
  type: LicenceType
  # 许可证所有证
  ownership: Organization
}

type ApplicationDependency {
  id: ID!
  name: String
  type: String
  value: String
  version: String
}

type Application {
  id: ID!
  """
  名称 (英文)
  """
  name: String!
  """
  名称 (中文)
  """
  title: String
  """
  简介
  """
  description: String
  """
  应用 LOGO
  """
  logo: String
  """
  应用访问地址
  """
  url: String
  """
  是否启用
  """
  enabled: Boolean
  """
  路由
  """
  routes(where: RouteWhereInput = {}): [Route!]!
  """
  菜单
  """
  menus: [Menu!]!
  """
  登录路由
  """
  loginRoute: Route
  """
  布局路由
  """
  layoutRoute: Route
  """
  集成钉钉
  """
  dingtalkIntegration: Boolean
  """
  客户端 ID
  """
  clientId: String!
  """
  客户端密钥
  """
  clientSecrets: [ClientSecret!]!
  """
  获取组织可用的许可证
  """
  licence: Licence
  """
  许可证
  """
  licences: [Licence!]!
  """
  依赖
  """
  dependencies: [ApplicationDependency!]!
  """
  模块配置
  """
  module(id: ID!): ApplicationModuleConfiguration
  """
  应用模块配置
  """
  modules: [ApplicationModuleConfiguration!]!
}

type ApplicationModuleConfiguration {
  id: ID!
  """
  模块名称
  """
  name: String
  """
  模块描述
  """
  description: String
  """
  模块配置
  """
  configuration: JSON
  """
  模块配置值
  """
  value(key: String!): String
}

enum RouteType {
  # 菜单
  MENU
  # 标题
  HEADER
  # 分割符
  DIVIDER
  # 路由
  ROUTE
}

enum MenuType {
  # 章节
  SECTION
  # 链接地址
  URL
  # 菜单
  MENU
  # 脚本
  SCRIPT
  # 分隔符
  SEPARATOR
}

"""
布局设置
"""
type LayoutSettings {
  """
  全屏幕模式，不展示布局框架
  """
  pure: Boolean
  """
  隐藏菜单栏
  """
  hideMenu: Boolean
}

input LayoutSettingsInput {
  """
  全屏幕模式，不展示布局框架
  """
  pure: Boolean
  """
  隐藏菜单栏
  """
  hideMenu: Boolean
}

type Route {
  id: ID!
  """
  菜单名称
  """
  name: String
  """
  是否启用
  """
  enabled: Boolean!
  """
  路由类型
  """
  type: RouteType!
  """
  访问路径
  """
  path: String!
  """
  必须登录
  """
  authorized: Boolean
  """
  访问权限
  """
  access: String
  """
  布局设置
  """
  layout: LayoutSettings
  """
  在面包屑中隐藏菜单
  """
  hideInBreadcrumb: Boolean
  """
  重定向
  """
  redirect: String
  """
  组件
  """
  component: Component
  """
  自定义面包屑组件
  """
  breadcrumb: Component
  """
  对应的图标
  """
  icon: String
  """
  序号
  """
  index: Int!
  """
  子路由
  """
  routes: [Route]
  """
  父路由
  """
  parent: Route
  """
  路由层级
  """
  level: Int!
  """
  路由对应的应用
  """
  application: Application!
}

union StarValue = Application

extend type Query {
  """
  所有的应用
  """
  applications(where: ApplicationWhereInput = {}): [Application!]!
  """
  查询单个应用的信息
  """
  application(id: ID!, idType: ApplicationIdType): Application
  """
  查询路由
  """
  route(id: ID!): Route
}

extend type Mutation {
  # 通过 yml 导入一个应用
  importApplication(file: Upload!): Application
  # 创建一个应用
  createApplication(input: ApplicationCreateInput!): Application
  # 更新应用信息
  updateApplication(
    id: ID!
    input: ApplicationUpdateInput!
    merge: Boolean = true
  ): Application
  # 删除应用
  deleteApplication(id: ID!): Boolean
  """
  创建路由
  """
  createRoute(input: RouteCreateInput!): Route
  """
  更新路由信息
  """
  updateRoute(id: ID!, input: RouteUpdateInput!, merge: Boolean = true): Route
  """
  删除路由
  """
  deleteRoute(id: ID!): Boolean
  """
  移动路由
  """
  moveRoute(id: ID!, parentRoute: ID, location: Int!): Route
  """
  创建菜单
  """
  createMenu(input: MenuCreateInput!): Menu
  """
  更新菜单
  """
  updateMenu(id: ID!, input: MenuUpdateInput!, merge: Boolean = true): Menu
  """
  删除菜单
  """
  deleteMenu(id: ID!): Boolean
  """
  移动菜单
  """
  moveMenu(id: ID!, parentMenu: ID, location: Int!): Menu
}
