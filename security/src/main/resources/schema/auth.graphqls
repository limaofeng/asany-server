extend type Query {
  """
  系统•当前登录用户
  """
  viewer(organization: ID): CurrentUser
  """
  会话
  """
  session(id: ID!): Session!
  """
  用户会话
  """
  sessions: [Session!]!
  """
  查询个人 Token
  """
  personalAccessTokens: [PersonalAccessToken!]!
}

extend type Mutation {
  """
  登录
  """
  login(
    """
    登录方式， 默认为 password
    loginType = password 时 username 与 password 必填
    loginType = dingtalk 时，  authCode 与 tmpAuthCode 其中一个不能为 NULL
    """
    loginType: LoginType = password
    """
    客户端ID
    """
    clientId: String!
    """
    用户名
    """
    username: String
    """
    密码
    """
    password: String
    """
    授权码
    """
    authCode: String
    """
    临时授权码
    """
    tmpAuthCode: String
    """
    绑定第三方平台信息
    """
    options: LoginOptions
  ): LoginUser!

  """
  注册
  """
  register(
    """
    昵称
    """
    nickName: String!
    """
    头像
    """
    avatar: File!
    """
    电话号码
    """
    phoneNumber: String!
    """
    密码
    """
    password: String!
    """
    短信验证码
    """
    smsCode: String!
  ): LoginUser!
  """
  退出登录
  """
  logout: Boolean
  """
  创建个人访问令牌
  """
  createPersonalAccessToken(clientId: String, name: String): PersonalAccessToken
  """
  撤销 Token
  """
  revokeToken(token: String): Boolean
  """
  撤销 Session
  """
  revokeSession(id: ID): Boolean
  """
  撤销个人 Token
  """
  revokePersonalAccessToken(id: ID): Boolean
}

directive @authInfo(
  """
  名称
  """
  name: String!
  """
  级别，只能是 Write, Read, List
  """
  accessLevel: String
  """
  授权资源类型
  """
  resourceTypes: [String!]
  """
  条件关键字
  """
  conditionKeywords: [String!]
  """
  关联操作
  """
  associatedOperations: [String!]
) on FIELD_DEFINITION

directive @resource(
  # 资源的名称，用于标识这个资源
  name: String!
  # 在用户界面中显示的标签
  label: String!
  # 资源的描述，简要说明这个资源的作用
  description: String!
  # 可以操作的源类型，用于获取或操作数据
  # 可以获取所有文章，或特定 ID 的文章
  sourceTypes: [String!]!
  # 资源的条件，限制访问或操作这个资源的范围
  conditions: [String!]
) on OBJECT

enum LoginType {
  # 密码登录
  password
}

enum SocialProvider {
  # 钉钉
  dingtalk
  # 微信
  WeChat
}

input LoginOptions {
  """
  连接社交平台
  """
  connected: Boolean = true
  """
  社交平台
  """
  provider: SocialProvider
  """
  用户社交平台 USER_ID
  """
  snser: String
}

enum UIdType {
  """
  默认ID
  """
  id
  """
  钉钉ID
  """
  dingtalk
}

# 登录用户对象
type LoginUser {
  """
  用户ID
  """
  uid: String!
  """
  名称
  """
  name: String
  """
  称号
  """
  title: String
  """
  用户类型
  """
  type: String!
  """
  头像
  """
  avatar: File @fileFormat
  """
  邮箱
  """
  email: String
  #  """
  #  组名
  #  """
  #  group: String
  """
  电话
  """
  phone: String
  """
  权限 -> authorities
  """
  authorities: [String!]!
  """
  令牌
  """
  token: String!
}

type CurrentUser {
  """
  用户ID
  """
  uid(type: UIdType = id): String!
  """
  名称
  """
  name: String
  """
  称号
  """
  title: String
  """
  用户类型
  """
  type: String!
  """
  头像
  """
  avatar: File @fileFormat
  """
  电话
  """
  phone: String
  """
  邮箱
  """
  email: String
  """
  权限
  """
  authorities: [String!]!
  """
  账号
  """
  account: String!
  """
  生日
  """
  birthday: Date
  """
  性别
  """
  sex: Sex
  """
  自我介绍
  """
  bio: String
  """
  公司
  """
  company: String
  """
  位置
  """
  location: String
  # 部门
  #    departments(organization: ID): [Department]
  # 职务
  #    positions(organization: ID,department: ID): [Position]
  # 角色
  #    roles: [Role]
  #当前部门
  #    currentDepartment(organization: ID!): Department
  #当前职务
  #    currentPosition(organization: ID!): Position
}

type PersonalAccessToken {
  id: ID
  """
  名称
  """
  name: String
  """
  创建时间
  """
  issuedAt: Date
  """
  过期时间
  """
  expiresAt: Date
  """
  权限范围
  """
  scopes: [String]
}

enum DeviceType {
  COMPUTER
  MOBILE
  TABLET
  GAME_CONSOLE
  DMR
  WEARABLE
  UNKNOWN
}

type ClientDevice {
  """
  原始 User-Agent 信息
  """
  userAgent: String
  """
  设备类型
  """
  type: DeviceType
  """
  浏览器
  """
  browser: String
  """
  操作系统
  """
  operatingSystem: String
}

type Session {
  id: ID!
  """
  设备
  """
  device: ClientDevice
  """
  登录时的 IP 地址
  """
  ip: String
  """
  最后一次使用的 IP 地址
  """
  lastIp: String
  """
  登录时的位置
  """
  location: String
  """
  最后一次访问的位置
  """
  lastLocation: String
  """
  登录时间
  """
  loginTime: Date!
  """
  最后一次访问时间
  """
  lastUsedTime: Date!
}

type AuthorizedService {
  id: ID!
}
