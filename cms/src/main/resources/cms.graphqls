#enum ArticlePermissionKey {
#    # 查看人
#    viewer,
#    # 下载人
#    downloader,
#    # 打印人
#    printer
#}

type PageComponent {
  """
  是否启用
  """
  enabled: Boolean!
  """
  路由
  """
  route: Route
  """
  组件
  """
  component: Component
}

input PageComponentInput {
  enabled: Boolean
  """
  路径
  """
  path: String
  """
  页面模版
  """
  template: String
  """
  数据
  """
  blocks: [ComponentDataInput!]
}

input ArticleCategoryCreateInput {
  """
  栏目名称
  """
  name: String!
  """
  地址
  """
  slug: String
  """
  栏目封面图
  """
  image: File
  """
  描述
  """
  description: String
  """
  上级栏目
  """
  parent: ID
  """
  排序
  """
  index: Int
  """
  附加信息
  """
  metafields: [ArticleMetafieldInput]
}

input FieldValueInput {
  name: String
  code: String
  value: String
}

input ArticleCategoryUpdateInput {
  """
  栏目名称
  """
  name: String
  """
  地址
  """
  slug: String
  """
  栏目封面图
  """
  image: File
  """
  描述
  """
  description: String
  """
  排序
  """
  index: Int
  """
  上级栏目
  """
  parent: ID
  """
  存储模版
  """
  storeTemplate: String
  """
  附加信息
  """
  metafields: [ArticleMetafieldInput]
  """
  分类页面
  """
  page: PageComponentInput
}

input ArticleWhereInput {
  # 关键字
  keyword: String
  """
  不包含的文章
  """
  id_notIn: [ID!]
  # 标签
  tags: [ID!]
  # 频道
  category: AcceptArticleCategory
  # 多个栏目
  category_in: [ID!]
  # 复杂查询支持
  and: [ArticleWhereInput]
  # 复杂查询支持
  or: [ArticleWhereInput]
  # 发布状态
  status: ArticleStatus
  # 发布状态
  status_in: [ArticleStatus!]
  # 发布时间
  publishedAt: String
  # 用户id
  viewer: ID
  # 创建人 ID
  createdBy: ID
  # 有效期限 true 过滤以过有效期限的文章
  validity: Boolean
}

input BannerWhereInput {
  # ID 查询
  id_in: [ID]
  # 是否启用
  enabled: Boolean
}

type ArticleConnection {
  # 总数据条数
  totalCount: Int!
  # 每页显示条数
  pageSize: Int!
  # 总页数
  totalPage: Int!
  # 当前页
  currentPage: Int!
  edges: [ArticleEdge!]!
  pageInfo: PageInfo!
}

type ArticleEdge {
  cursor: String
  node: Article!
}

enum ContentFormat {
  html
}

enum ArticleStatus {
  """
  草稿
  """
  DRAFT
  """
  已发布
  """
  PUBLISHED
  """
  计划
  """
  SCHEDULED
  """
  失效
  """
  INACTIVE
}

type Meta {
  file: File
  url: String
  title: String
  description: String
}

type ArticleMetaField {
  id: ID
  key: String
  type: String
  namespace: String
  value: String
  description: String
}

type ArticleCategoryMetaField {
  id: ID
  key: String
  type: String
  namespace: String
  value: String
  description: String
}

type ArticleCategory {
  id: ID!
  """
  编码
  """
  slug: String
  """
  名称
  """
  name: String!
  """
  全称
  """
  fullName: String!
  """
  描述
  """
  description: String
  """
  对应的图标
  """
  icon: String
  """
  栏目封面图
  """
  image: File
  """
  全路径
  """
  path: String
  """
  排序
  """
  index: Int!
  """
  层级
  """
  level: Int!
  """
  上级栏目
  """
  parent: ArticleCategory
  """
  元数据
  """
  metafields: [ArticleCategoryMetaField!]!
  """
  创建时间
  """
  createdAt: Date!
  """
  修改时间
  """
  updatedAt: Date!
  """
  子栏目
  """
  children: [ArticleCategory!]!
  """
  存储模版
  """
  storeTemplate: ArticleStoreTemplate
  """
  页面
  """
  page: PageComponent
  """
  栏目文章
  """
  articles(
    """
    筛选
    """
    where: ArticleWhereInput = {}
    # 跳过
    skip: Int = 0
    # 游标定位 之后
    after: ID
    # 游标定位 之前
    before: ID
    # 开始几条
    first: Int = 15
    # 之前几条
    last: Int
    # 排序
    orderBy: OrderBy = "unsorted"
  ): [Article!]!
}

# 支持层级，亦可栏目使用
type ArticleTag {
  id: ID!
  # 短标识
  slug: String
  # 名称
  name: String
  # 描述
  description: String
  # 全路径
  path: String
  # 排序
  index: Int
  createdAt: Date
  updatedAt: Date
}

type ArticleAuthor {
  id: ID
  # 名称
  name: String
  # 员工
  employee: Employee
}

# 文章
type Article
  @resource(
    name: "文章"
    label: "cms:article"
    description: "文章"
    sourceTypes: ["cms:article/*", "cms:article/{#id}"]
    conditions: ["organization.id:StringEquals"]
  ) {
  """
  文章ID
  """
  id: ID!
  """
  链接
  """
  slug: String
  """
  图片
  """
  image: File
  """
  标题
  """
  title: String
  """
  状态
  """
  status: ArticleStatus!
  """
  摘要
  """
  summary: String
  """
  作者
  """
  authors: [ArticleAuthor!]!
  """
  发布时间
  """
  publishedAt: Date @dateFormat
  """
  内容
  """
  content: ArticleContent
  """
  正文类型
  """
  contentType: ContentType
  """
  body 的 html 格式
  """
  bodyHtml: String
  #查询评论
  #    comments(filter: CommentWhereInput, page: Int = 1, pageSize: Int = 15, orderBy: OrderBy = "unsorted"): CommentConnection
  """
  文章分类
  """
  category: ArticleCategory
  """
  包含文章分类的全部层级的数据
  """
  categories: [ArticleCategory!]!
  """
  标签
  """
  tags: [ArticleTag!]!
  """
  特征
  """
  features: [ArticleFeature!]!
  """
  元数据
  """
  metafields: [ArticleMetaField!]!
  # 有效期限 true 永久 false 短期
  validity: Boolean
  # 有效期限 开始时间
  validityStartDate: Date
  # 有效期限 结束时间
  validityEndDate: Date
  # 附件
  attachments: [File!]!
  """
  收藏
  """
  favorites: Int!
  """
  点击数
  """
  clicks: Int!
  """
  阅读数
  """
  reads: Int!
  """
  点赞数
  """
  likes: Int!
  """
  创建人
  """
  createdBy: Int
  """
  修改人
  """
  updatedBy: Int
  """
  创建时间
  """
  createdAt: Date @dateFormat
  """
  修改时间
  """
  updatedAt: Date @dateFormat
}

# 文章内容
interface ArticleContent {
  id: ID!
}

enum TextContentType {
  HTML
  MARKDOWN
}

# html格式内容
type TextContent implements ArticleContent {
  id: ID!
  type: TextContentType
  text: String
}

type VideoContent implements ArticleContent {
  id: ID!
  url: String
  video: File
  title: String
  description: String
}

type ImageContentItem {
  id: ID!
  """
  图片
  """
  url: String
  """
  本地图片对象
  """
  image: File
  """
  图片标题
  """
  title: String
  """
  图片描述
  """
  description: String
}

type ImageContent implements ArticleContent {
  id: ID!
  """
  图片集
  """
  images: [ImageContentItem!]!
}

enum DocumentType {
  PDF
  DOCX
  XLSX
  PPTX
  TXT
  OTHER
}

type DocumentContent implements ArticleContent {
  id: ID!
  """
  文件地址
  """
  url: String
  """
  文件
  """
  document: File
  """
  文档类型
  """
  type: DocumentType
  """
  文件大小
  """
  size: Number @fileSize(unit: "bytes")
  """
  文件标题
  """
  title: String
  """
  文件描述
  """
  description: String
}

enum ArticleType {
  # 普通文章
  text
  # 链接文章
  link
  # 文件文章
  file
  # 图片
  picture
  # 视频
  video
}

enum ArticleCategoryStarType {
  # 关注
  follow
}

enum ArticleStarType {
  # 收藏
  favorites
  # 点击数
  clicks
  # 阅读数
  reads
  # 点赞数
  likes
}

input ArticleCreateInput {
  slug: String
  """
  文章标题
  """
  title: String
  """
  文章正文
  """
  content: ArticleContentInput
  """
  摘要
  """
  summary: String
  """
  文章封面
  """
  image: File
  """
  文章标签
  """
  tags: [ID!]
  """
  功能特征 <br/> 置顶 / 精华
  """
  features: [String!]
  """
  文章栏目
  """
  category: ID
  """
  状态
  """
  status: ArticleStatus
  """
  发布日期
  """
  publishedAt: String
  """
  授予权限
  """
  access: [String!]
  """
  附件
  """
  attachments: [File!]
  """
  附加信息
  """
  metafields: [ArticleMetafieldInput!]
  # 有效期限 true 永久 false 短期
  validity: Boolean
  # 有效期限 开始时间
  validityStartDate: Date
  # 有效期限 结束时间
  validityEndDate: Date
  # 作者
  authors: [ID!]
}

input ContentInput {
  # 正文类型
  type: TextContentType
  # 文本
  text: String
}

enum ContentType {
  TEXT
  VIDEO
  IMAGE
  DOCUMENT
}

input ContentPictureInput {
  # 图片
  picture: File
  # 图片摘要
  digest: String
}

input ArticleMetafieldInput {
  key: String!
  type: String!
  namespace: String!
  value: String
  description: String
}

input ImageContentItemInput {
  url: String
  image: File
  alt: String
  title: String
  description: String
  index: Int
}

"""
文章内容
contentType = VIDEO, fields = ["url", "video", "title", "description"]
contentType = TEXT, fields = ["type", "text"]
contentType = IMAGE, fields = ["images"]
contentType = DOCUMENT, fields = ["url", "document", "type", "size", "title", "description"]
"""
input ArticleContentInput {
  id: ID
  """
  标题
  """
  title: String
  """
  描述
  """
  description: String
  """
  引用地址
  """
  url: String
  """
  Text 类型：HTML, MARKDOWN
  Doc 类型：PDF, DOCX, XLSX, PPTX, TXT, OTHER
  """
  type: String
  """
  文本
  """
  text: String
  """
  文件大小
  """
  size: Int
  """
  图片集
  """
  images: [ImageContentItemInput!]
  """
  视频
  """
  video: File
  """
  文档
  """
  document: File
}

input ArticleUpdateInput {
  """
  文章标题
  """
  title: String
  """
  文章URL 必须唯一
  """
  slug: String
  """
  文章发布状态
  """
  status: ArticleStatus
  """
  摘要
  """
  summary: String
  """
  文章封面
  """
  image: File
  """
  文章标签
  """
  tags: [ID]
  """
  特征
  """
  features: [String!]
  """
  文章栏目
  """
  category: ID
  """
  文章正文 <br/> 实际内容与 ArticleStoreTemplate 相关
  """
  content: ArticleContentInput
  """
  发布日期
  """
  publishedAt: String
  #  """
  #  授予权限
  #  """
  #  permissionStatements: [PermissionInput]
  """
  附件
  """
  attachments: [File!]
  """
  作者
  """
  authors: [ID!]
  # 有效期限 true 永久 false 短期
  validity: Boolean
  # 有效期限 开始时间
  validityStartDate: Date
  # 有效期限 结束时间
  validityEndDate: Date
  """
  附加信息
  """
  metafields: [ArticleMetafieldInput!]
}

type ArticleStoreTemplateComponents {
  """
  详情页组件
  """
  view: String
  """
  新增页组件
  """
  added: String
  """
  编辑页组件
  """
  edit: String
  """
  列表页组件
  """
  list: String
}

"""
文章存储模版
"""
type ArticleStoreTemplate {
  id: ID!
  """
  名称
  """
  name: String!
  """
  内容类型
  """
  contentType: ContentType
  """
  排序码
  """
  index: Int
  """
  对应的组件
  """
  components: ArticleStoreTemplateComponents!
}

input ArticleTagUpdateInput {
  # 标签名称
  name: String!
  # 唯一编码
  slug: String
  # 标签图
  image: File
  # 描述
  description: String
  # 排序
  index: Int
}

input ArticleTagCreateInput {
  # 标签名称
  name: String!
  # 唯一编码
  slug: String
  # 标签图
  image: File
  # 描述
  description: String
  # 排序
  index: Int
}

input AcceptArticleCategory {
  """
  栏目
  """
  id: ID!
  """
  是否包含子栏目
  """
  subColumns: Boolean = false
}

input ArticleCategoryWhereInput {
  """
  名称
  """
  name: String
  """
  路径 匹配开始
  """
  path_startsWith: String
  """
  父栏目
  """
  parent: AcceptArticleCategory
}

input PermissionInput {
  permissionStatement: String
  grants: [String]
}

input ArticleFeatureWhereInput {
  # 名称
  name: String
}
input ArticleFeatureCreateInput {
  # 编码
  code: String
  # 名称
  name: String!
  # 描述
  description: String
}

input ArticleFeatureUpdateInput {
  # 编码
  code: String
  # 名称
  name: String!
  # 描述
  description: String
}

type ArticleFeature {
  id: ID
  # 编码
  code: String
  # 名称
  name: String
  # 是否启用流程
  needReview: Boolean
  # 描述
  description: String
}

enum BannerBackgroundType {
  # 图片
  IMAGE
  # 视频
  VIDEO
}

type Banner {
  id: ID
  # 名称
  name: String
  # 标题
  title: String
  # 副标题
  subtitle: String
  # 描述
  description: String
  # 媒体类型
  backgroundType: BannerBackgroundType
  # 媒介
  background: File @fileFormat
  # 跳转地址
  url: String
  # 跳转按钮文本
  buttonText: String
  # 是否启用
  enabled: Boolean
}

input BannerCreateInput {
  # 名称
  name: String
  # 标题
  title: String
  # 副标题
  subtitle: String
  # 描述
  description: String
  # 媒体类型
  backgroundType: BannerBackgroundType
  # 媒介
  background: File
  # 跳转地址
  url: String
  # 跳转按钮文本
  buttonText: String
  # 是否启用
  enabled: Boolean
}

input BannerUpdateInput {
  # 名称
  name: String
  # 标题
  title: String
  # 副标题
  subtitle: String
  # 描述
  description: String
  # 媒体类型
  backgroundType: BannerBackgroundType
  # 媒介
  background: File
  # 跳转地址
  url: String
  # 跳转按钮文本
  buttonText: String
  # 是否启用
  enabled: Boolean
}

extend type Query {
  """
  单个文章
  """
  article(id: ID!): Article
  """
  全部文章(分页)
  """
  articlesConnection(
    where: ArticleWhereInput = {}
    page: Int = 1
    pageSize: Int = 15
    orderBy: OrderBy = "unsorted"
  ): ArticleConnection
    @authInfo(
      name: "cms:ArticlesConnection"
      accessLevel: "List"
      resourceTypes: ["cms:article/*", "cms:article/{#id}"]
    )
  """
  全部文章
  """
  articles(
    where: ArticleWhereInput = {}
    offset: Int = 0
    limit: Int = 15
    orderBy: OrderBy = "unsorted"
  ): [Article!]!
  """
  文章栏目
  """
  articleCategories(
    where: ArticleCategoryWhereInput = {}
    orderBy: OrderBy = "unsorted"
  ): [ArticleCategory!]!
  """
  文章标签
  """
  articleTags(
    organization: ID!
    where: ArticleCategoryWhereInput = {}
    orderBy: OrderBy = "unsorted"
  ): [ArticleTag]
  """
  根据ID获取文章栏目
  """
  articleCategory(id: ID!): ArticleCategory
  """
  查询文章存储模版
  """
  articleStoreTemplates: [ArticleStoreTemplate!]!
  """
  查询所有推荐位
  """
  articleFeatures(
    organization: ID!
    where: ArticleFeatureWhereInput = {}
    orderBy: OrderBy = "createdAt_DESC"
  ): [ArticleFeature]
  """
  根据id查询推荐位
  """
  articleFeature(id: ID!): ArticleFeature
  # 横幅广告
  banner(id: ID!): Banner
  # 横幅广告
  banners(where: BannerWhereInput = {}, orderBy: OrderBy = "unsorted"): [Banner]
}

type Mutation {
  """
  新增文章
  """
  createArticle(input: ArticleCreateInput!): Article
  """
  修改文章
  """
  updateArticle(
    id: ID!
    input: ArticleUpdateInput!
    merge: Boolean = true
  ): Article
  """
  发布文章
  """
  publishArticle(id: ID): Boolean
  """
  删除文章
  """
  deleteArticle(id: ID!): Boolean
  """
  批量删除
  """
  deleteManyArticles(ids: [ID]!): Int
  """
  添加栏目
  """
  createArticleCategory(input: ArticleCategoryCreateInput!): ArticleCategory!
  """
  编辑栏目
  """
  updateArticleCategory(
    id: ID!
    merge: Boolean = true
    input: ArticleCategoryUpdateInput!
  ): ArticleCategory!
  # 删除栏目
  deleteArticleCategory(id: ID!): Boolean
  # 添加标签
  createArticleTag(input: ArticleTagCreateInput): ArticleTag
  # 更新标签
  updateArticleTag(
    id: ID!
    merge: Boolean = true
    input: ArticleTagUpdateInput
  ): ArticleTag
  # 删除标签
  removeArticleTag(id: ID!): Boolean
  # 新增推荐位
  createArticleFeature(input: ArticleFeatureCreateInput): ArticleFeature
  # 更新推荐位
  updateArticleFeature(
    id: ID!
    merge: Boolean = true
    input: ArticleFeatureUpdateInput
  ): ArticleFeature
  # 删除推荐位
  deleteArticleFeature(id: ID!): Boolean
  # 创建 Banner
  createBanner(input: BannerCreateInput!): Banner
  # 更新 Banner
  updateBanner(
    id: ID!
    input: BannerUpdateInput!
    merge: Boolean = true
  ): Banner
  # 删除 Banner
  deleteBanner(id: ID!): Boolean
}
