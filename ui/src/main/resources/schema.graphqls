enum LibraryType {
  # 图标
  ICONS
  # 组件
  COMPONENT
  # 设计系统
  DESIGN_SYSTEM
}

type Collection {
  id: ID
}

interface Library {
  id: ID
  # 名称
  name: String
  # 描述
  description: String
}

type Icon {
  id: ID!
  name: String
  description: String
  tags: [String!]!
  unicode: String
  content: String
  # 库 ID
  libraryId: ID!
}

type IconLibrary implements Library {
  id: ID!
  # 名称
  name: String
  # 描述
  description: String
  # 图标
  icons: [Icon!]!
  # 数量
  total: Int!
}

type ComponentLibrary implements Library {
  id: ID!
  """
  名称
  """
  name: String
  """
  描述
  """
  description: String
  """
  图标
  """
  components: [Component!]!
  """
  数量
  """
  total: Int!
}

input OwnershipInput {
  id: ID!
  type: String!
}

input IconInput {
  """
  名称
  """
  name: String
  """
  编码
  """
  unicode: String
  """
  标签
  """
  tags: [String]
  """
  描述
  """
  description: String
  """
  正文
  """
  content: String!
}

input IconUpdateInput {
  """
  名称
  """
  name: String
  """
  编码
  """
  unicode: String
  """
  标签
  """
  tags: [String]
  """
  描述
  """
  description: String
  """
  正文
  """
  content: String
  """
  库 ID
  """
  libraryId: ID!
}

input IconCreateInput {
  # 名称
  name: String
  # 编码
  unicode: String
  # 标签
  tags: [String]
  # 描述
  description: String
  # 正文
  content: String
  # 库 ID
  libraryId: ID!
}

enum Operation {
  DELETE
  UPDATE
  INSERT
}

type Oplog {
  id: ID
  clazz: String
  entityName: String
  tableName: String
  primarykeyName: String
  primarykeyValue: String
  operation: Operation
  data: JSON
}

input OplogFilter {
  entityName: String
  primarykeyName: String
  primarykeyValue: String
  createdAt_gt: Date
  entityName_in: [String]
}

input IconFilter {
  id_in: [ID]
  library: ID
}

input IconLibraryFilter {
  id_in: [ID]
}

input LibraryCreateInput {
  type: LibraryType!
  name: String!
  description: String
}

input LibraryUpdateInput {
  name: String
  description: String
}

enum ComponentType {
  ROUTE
  GLOBAL
}

input ComponentCreateInput {
  """
  引用名称
  """
  name: String
  """
  显示名称
  """
  title: String!
  """
  描述
  """
  description: String
  """
  类型
  """
  type: ComponentType
  """
  模版
  """
  template: String!
  """
  封面
  """
  image: File
  """
  配置数据
  """
  blocks: [ComponentDataInput!]
  """
  标签
  """
  tags: [String!]
  """
  库 ID
  """
  libraryId: ID!
}

input ComponentDataInput {
  key: String
  props: JSON
}

input ComponentUpdateInput {
  """
  引用名称
  """
  name: String
  """
  显示名称
  """
  title: String
  """
  描述
  """
  description: String
  """
  封面
  """
  image: File
  """
  模版
  """
  template: String
  """
  配置数据
  """
  blocks: [ComponentDataInput]
  """
  标签
  """
  tags: [String!]
  """
  库 ID
  """
  libraryId: ID!
}

enum ComponentScope {
  # 菜单
  MENU
  # 路由
  ROUTE
  # 通用
  GLOBAL
}

type Component {
  id: ID!
  """
  使用范围
  """
  scope: ComponentScope
  """
  组件类型
  """
  type: ComponentType
  """
  引用名称
  """
  name: String
  """
  显示名称
  """
  title: String
  """
  封面
  """
  image: File
  """
  描述
  """
  description: String
  """
  组件模版
  """
  template: String!
  """
  组件数据
  """
  blocks: [ComponentData!]!
  """
  标签
  """
  tags: [String!]!
  """
  创建日期
  """
  createdAt: Date
  """
  库 ID
  """
  libraryId: ID!
}

input ComponentFilter {
  name: String
  title: String
}

type ComponentConnection {
  """
  总数据条数
  """
  totalCount: Int
  """
  每页显示条数
  """
  pageSize: Int
  """
  总页数
  """
  totalPage: Int
  """
  当前页
  """
  currentPage: Int
  edges: [ComponentEdge]
}

type ComponentEdge {
  cursor: String
  node: Component
}

type ComponentData {
  key: String!
  props: JSON!
}

extend type Query {
  """
  库
  """
  libraries(
    type: LibraryType!
    ownership: OwnershipInput = { type: "PERSONAL", id: "me" }
  ): [Library!]!
  """
  图标库
  """
  iconLibraries(
    filter: IconLibraryFilter = {}
    ownership: OwnershipInput = { type: "PERSONAL", id: "me" }
  ): [IconLibrary!]!
  """
  图标库
  """
  iconLibrary(id: ID!): IconLibrary
  """
  组件库
  """
  componentLibrary(id: ID!): ComponentLibrary
  """
  查询图标
  """
  icons(filter: IconFilter = {}): [Icon!]!
  """
  查询日志
  """
  oplogs(filter: OplogFilter = {}): [Oplog!]!
  """
  查询组件 单个
  """
  component(id: ID!): Component
  """
  查询组件 列表
  """
  components(
    filter: ComponentFilter = {}
    page: Int = 1
    pageSize: Int = 15
    orderBy: OrderBy = "unsorted"
  ): [Component]
  """
  查询组件 分页
  """
  componentsConnection(
    filter: ComponentFilter = {}
    page: Int = 1
    pageSize: Int = 15
    orderBy: OrderBy = "unsorted"
  ): ComponentConnection
}

extend type Mutation {
  """
  导入图标
  """
  importIcons(library: ID!, icons: [IconInput]!): [Icon!]!
  """
  添加图标
  """
  createIcon(input: IconCreateInput!): Icon
  """
  更新图标
  """
  updateIcon(id: ID!, input: IconUpdateInput!): Icon
  """
  删除图标
  """
  deleteIcon(id: ID!): Boolean
  """
  添加库
  """
  createLibrary(input: LibraryCreateInput!): Library
  """
  更新库
  """
  updateLibrary(id: ID!, input: LibraryUpdateInput!): Library
  """
  删除库
  """
  deleteLibrary(id: ID!): Boolean
  """
  创建组件
  """
  createComponent(input: ComponentCreateInput!): Component
  """
  更新组件信息
  """
  updateComponent(
    id: ID!
    input: ComponentUpdateInput!
    merge: Boolean = true
  ): Component
  """
  删除组件
  """
  deleteComponent(id: ID!): Boolean
}
