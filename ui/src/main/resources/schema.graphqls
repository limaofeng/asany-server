enum LibraryType {
    # 图标
    ICONS
    # 组件
    COMPONENT
    # 设计系统
    DESIGN_SYSTEM
}

type Collection {
    id: ID
}

interface Library {
    id: ID
}

type Icon {
    id: ID
    name: String
    tags: [String]
    unicode: String
    content: String
}

type IconLibrary implements Library {
    id: ID
    # 名称
    name: String
    # 描述
    description: String
    # 图标
    icons: [Icon]
}

input OwnershipInput {
    id: ID!
    type: String!
}

input IconInput {
    # 名称
    name: String
    # 编码
    unicode: String
    # 标签
    tags: [String]
    # 描述
    description: String
    # 正文
    content: String!
}

input IconUpdateInput {
    # 名称
    name: String
    # 编码
    unicode: String
    # 标签
    tags: [String]
    # 描述
    description: String
    # 正文
    content: String
    # 库 ID
    libraryId: ID!
}

input IconCreateInput {
    # 名称
    name: String
    # 编码
    unicode: String
    # 标签
    tags: [String]
    # 描述
    description: String
    # 正文
    content: String
    # 库 ID
    libraryId: ID!
}

extend type Query {
    # 库
    libraries(type: LibraryType!, ownership: OwnershipInput = {type: "PERSONAL", id: "me"}): [Library]
    # 图标库
    iconLibraries(ownership: OwnershipInput = {type: "PERSONAL", id: "me"}): [IconLibrary]
    # 图标库
    iconLibrary(id: ID!): IconLibrary
}

extend type Mutation {
    # 导入图标
    importIcons(library: ID!, icons: [IconInput]!): IconLibrary
    # 添加图标
    createIcon(input: IconCreateInput!): Icon
    # 更新图标
    updateIcon(id: ID!, input: IconUpdateInput!): Icon
    # 删除图标
    deleteIcon(id: ID!): Boolean
}